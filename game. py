from load_game_data import load_game_data

# Load game data from file
game_data = load_game_data('game_data. txt')

# Initialize game state
current_room = None
inventory = []
room_history = []

def start_game():
    # Display title and objective
    print(f"\n\033[97;1;4m{game_data['title']}\033[0m")
    if 'objective' in game_data:
        print(game_data['objective'])

    global current_room
    current_room = game_data['first_room_id']

    # Initialize room and generate options
    room = game_data['rooms'][current_room]
    exits = list(room['exits']. keys())
    items = room.get('items', [])
    persons = room. get('persons', [])

    print("\nYou are in the", room['name'], ":\n")
    print(room['description'])

    if exits:
        print("Exits:")
        for exit in exits:
            print(f"- {exit} ({game_data['rooms'][room['exits'][exit]]['name']})")

    if items:
        print("\nVisible items:")
        for item in items:
            print(f"- {item}")

    if persons:
        print("\nPersons here:")
        for person in persons:
            print(f"- {person}")

def handle_puzzle():
    room = game_data['rooms'][current_room]
    print("\033[32m", room['riddle'], "\033[0m")
    
    answer = input("> ")
    if answer == room['answer']:
        print("Correct! You've solved the puzzle.")
        # Add reward item to inventory
        if 'reward_item' in room:
            inventory.append(room['reward_item'])
            print(f"You received a {room['reward_item']} as a reward!")
    else:
        print("Wrong answer. Try again.")

def handle_enemy():
    room = game_data['rooms'][current_room]
    enemy = room['enemy']

    print(f"You encounter a {enemy['name']}!")

    action = input("> "). lower()
    
    if action == "fight":
        # Handle fight logic here
        pass
    elif action == "retreat":
        # Handle retreat logic here
        pass

def handle_action(action):
    room = game_data['rooms'][current_room]

    if action in room['exits']:
        global current_room
        current_room = room['exits'][action]
        start_game()

    elif action.startswith("take "):
        item = action[5:]. strip()
        if item in room.get('items', []):
            inventory.append(item)
            print(f"You took the {item}.")
            # Add item description to output
            if item in game_data['items']:
                print(game_data['items'][item]['description'])
            room['items']. remove(item)

    elif action.startswith("examine "):
        item = action[8:]. strip()
        # Handle examine logic here
        pass

    # ... handle other actions like search, combine items, drop, ask, trade, etc.

def main():
    start_game()

    while True:
        action = input("> "). lower()
        
        if action == "quit":
            break
        
        handle_action(action)

if __name__ == '__main__':
    main()
